#Bar Plot for Survival Count

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(6, 4))
sns.countplot(x='Survived', data=df, hue='Survived', palette='viridis', legend=False)
plt.title('Survival Count')
plt.show()

#Bar Plot for Survival Count

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(6, 4))
sns.countplot(x='Survived', data=df, hue='Survived', palette='viridis', legend=False)
plt.title('Survival Count')
plt.show()

#Distribution of 'Age' Column (with Missing Values Handled)

import seaborn as sns
import matplotlib.pyplot as plt

# Check for missing values and handle them (if not already handled)
df['Age'] = df['Age'].fillna(df['Age'].median())

# Plot the distribution of Age
plt.figure(figsize=(8, 5))
sns.histplot(df['Age'], bins=30, kde=True, color='blue')  # Using the 'Age' column
plt.title('Distribution of Age')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

#Bar Plot of Pclass

import seaborn as sns
import matplotlib.pyplot as plt

plt.figure(figsize=(6, 4))
sns.countplot(x='Pclass', data=df, hue='Pclass', palette='coolwarm', legend=False)
plt.title('Passenger Class Distribution')
plt.xlabel('Passenger Class')
plt.ylabel('Count')
plt.show()

#Sex Distribution of Survivors

import seaborn as sns
import matplotlib.pyplot as plt

# Bar plot of survival by gender
plt.figure(figsize=(6, 4))
sns.countplot(x='Sex', hue='Survived', data=df, palette='muted')
plt.title('Survival by Gender')
plt.xlabel('Gender')
plt.ylabel('Count')
plt.show()

#Heatmap of Correlation Matrix

import seaborn as sns
import matplotlib.pyplot as plt

# Drop non-numeric columns (e.g., 'Name', 'Ticket', 'Cabin')
df_numeric = df.select_dtypes(include=['float64', 'int64'])  # Keep only numeric columns

# Calculate the correlation matrix
plt.figure(figsize=(10, 8))
corr_matrix = df_numeric.corr()  # Correlation matrix of numeric columns
sns.heatmap(corr_matrix, annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Matrix Heatmap')
plt.show()

#fare distribution

import seaborn as sns
import matplotlib.pyplot as plt

# Distribution of 'Fare' column
plt.figure(figsize=(8, 5))
sns.histplot(df['Fare'].dropna(), bins=40, kde=True, color='green')
plt.title('Fare Distribution')
plt.xlabel('Fare')
plt.ylabel('Frequency')
plt.show()

#Count Plot for Embarked Locations

import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

# Load the Titanic dataset
df = pd.read_csv('Titanic-Dataset.csv')

# One-Hot Encode the 'Embarked' column
df = pd.get_dummies(df, columns=['Embarked'], drop_first=True)

# Count plot for Embarked_Q location
plt.figure(figsize=(6, 4))
sns.countplot(x='Embarked_Q', hue='Embarked_Q', data=df, palette='Set1', legend=False)
plt.title('Count of Passengers Embarked from Location Q')
plt.show()

# Count plot for Embarked_S location
plt.figure(figsize=(6, 4))
sns.countplot(x='Embarked_S', hue='Embarked_S', data=df, palette='Set1', legend=False)
plt.title('Count of Passengers Embarked from Location S')
plt.show()

#Count Plot for Embarked Locations

import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd

# Load the Titanic dataset
df = pd.read_csv('Titanic-Dataset.csv')

# One-Hot Encode the 'Embarked' column
df = pd.get_dummies(df, columns=['Embarked'], drop_first=True)

# Count plot for Embarked_Q location
plt.figure(figsize=(6, 4))
sns.countplot(x='Embarked_Q', hue='Embarked_Q', data=df, palette='Set1', legend=False)
plt.title('Count of Passengers Embarked from Location Q')
plt.show()

# Count plot for Embarked_S location
plt.figure(figsize=(6, 4))
sns.countplot(x='Embarked_S', hue='Embarked_S', data=df, palette='Set1', legend=False)
plt.title('Count of Passengers Embarked from Location S')
plt.show()
